apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-android-extensions'

//for JUnit test 5
//apply plugin: "de.mannodermaus.android-junit5"

android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.acob.blc.acobooking"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    buildToolsVersion '27.0.1'
    /*testOptions {
        // Configuration closure added by the plugin;
        // all configurable parameters related to JUnit 5 can be found here
        junitPlatform {
            // The JUnit Jupiter dependency version to use
            jupiterVersion "5.0.2"

            // The JUnit Vintage Engine dependency version to use
            vintageVersion "4.12.2"

            // Whether or not JUnit 5 test tasks should be affected by
            // JVM Arguments, System Properties & Environment Variables
            // declared through "unitTests.all" closures
            applyDefaultTestOptions true

            // Options related to running instrumented tests with JUnit 5.
            // This is an incubating feature which utilizes the backwards-compatibility
            // of the JUnit Platform in order to enhance the default Test Instrumentation Runner
            // with new power. However, because of their experimental nature and steep minSdkVersion requirement,
            // they are turned off by default. If you choose to enable them, you also have to declare
            // the library dependency in your androidTest scope. Please refer to the "Setup"
            // section for more details.
            instrumentationTests {
                enabled true

                // The Android-Instrumentation-Test dependency version to use
                version "0.1.1"
            }

            // Configuration of companion tasks for JaCoCo Reports,
            // associated with each JUnit 5 task generated by the plugin.
            // Just like the companion tasks themselves, these properties
            // will only have an effect if your module declares the "jacoco" plugin as well.
            // For each of the available report types, you can toggle the availability
            // and destination folders that they write to.
            *//*jacoco {
                xml {
                    enabled true
                    destination project.file()
                }
                html {
                    enabled true
                    destination project.file()
                }
                csv {
                    enabled true
                    destination project.file()
                }
            }*//*
        }
    }*/
}

dependencies {

    //dagger
    implementation "com.android.support:support-v4:$rootProject.versions.support_lib"
    compile "com.google.dagger:dagger:$rootProject.versions.dagger"
    compile "com.google.dagger:dagger-android:$rootProject.versions.dagger"
    compile "com.google.dagger:dagger-android-support:$rootProject.versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$rootProject.versions.dagger"

//mqtt client
    compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0'
   // compile('org.eclipse.paho:org.eclipse.paho.android.service:1.0.2')
   //         { exclude module: 'support-v4' }

//rxjava
    compile "io.reactivex.rxjava2:rxjava:2.1.0"
    compile "io.reactivex.rxjava2:rxandroid:2.0.1"

    compile "com.android.support:cardview-v7:$rootProject.versions.support_lib"
    compile "com.android.support:recyclerview-v7:$rootProject.versions.support_lib"
    //Room
    compile "android.arch.persistence.room:runtime:$rootProject.versions.room"
    compile "android.arch.persistence.room:rxjava2:$rootProject.versions.room"
    kapt "android.arch.persistence.room:compiler:$rootProject.versions.room"
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    //Gson
    compile 'com.google.code.gson:gson:2.8.2'

    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$rootProject.versions.support_lib"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation "com.android.support:design:$rootProject.versions.support_lib"
    implementation "com.android.support:support-v4:$rootProject.versions.support_lib"
    testImplementation 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.13.0'
    androidTestCompile 'org.mockito:mockito-android:2.13.0'


//    testImplementation junit5.unitTests()
//    testImplementation junit5.parameterized()

    //To work around this, there is a separate dependency you can add to the test scope of your project in Android Studio 3. It provides its own copy of the JUnit 5 Runtime provided by a more recent build of IntelliJ, overriding the one embedded in Android Studio.
//    testCompileOnly junit5.unitTestsRuntime()

//    testImplementation 'com.android.support.test:runner:1.0.1'
//    testImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'

    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
//    androidTestImplementation junit5.unitTests()
//    androidTestImplementation junit5.parameterized()

    // IMPORTANT:
    // By declaring this dependency, you have to use a minSdkVersion
    // of at least 26, since the nature of JUnit 5 relies on APIs that aren't
    // available on Android devices before then.
    // Additionally, you are required to explicitly enable support for instrumented tests in the
    // "junitPlatform" configuration closure (see the section below for details).
    //androidTestImplementation junit5.instrumentationTests()


}
/*
buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "de.mannodermaus.gradle.plugins:android-junit5:1.0.22"
    }
}*/
